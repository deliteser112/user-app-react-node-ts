# api-docs/paths/users.yaml

paths:
  /users:
    get:
      summary: Retrieves all users
      description: Fetches a paginated list of users from the database.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number of the user listing
        - in: query
          name: limit
          schema:
            type: integer
            default: 5
          description: Number of users per page
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      summary: Creates a new user
      description: Adds a new user to the database and returns the newly created user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /users/{id}:
    get:
      summary: Retrieves a single user by ID
      description: Fetches details of a single user by their ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
        "500":
          description: Server error

    put:
      summary: Updates a user
      description: Updates a user's information by their ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "200":
          description: User updated successfully
        "400":
          description: Validation error
        "404":
          description: User not found
        "500":
          description: Server error

    delete:
      summary: Deletes a user
      description: Deletes a user by their ID from the database.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "204":
          description: User deleted successfully
        "404":
          description: User not found
        "500":
          description: Server error
