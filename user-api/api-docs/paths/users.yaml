# api-docs/paths/users.yaml

paths:
  /users:
    get:
      summary: Retrieves a list of all users
      description: Returns all users from the database.
      responses:
        200:
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      summary: Creates a new user
      description: Adds a new user to the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        201:
          description: User created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /users/{id}:
    get:
      summary: Retrieves a user by ID
      description: Returns a single user from the database by their ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID.
      responses:
        200:
          description: A user object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      summary: Updates a user's information by their ID
      description: Modifies an existing user's details in the database.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        200:
          description: User updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      summary: Deletes a user by their ID
      description: Removes a user from the database by their ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID.
      responses:
        204:
          description: User deleted successfully
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
